model:
  task: face
  backbone:
    resnet:
        depth: 152
        drop_ratio: 0.4
        net_mode: ir_se
        feat_dim: 512
        out_h: 7
        out_w: 7
  head:
    arcface:
      feat_dim: 512
      num_class: 5749
      margin_arc: 0.35
      margin_am: 0.0
      scale: 32
data:
  root: crop_face_224  # -train -val
  nw: 4 # if not multi-nw, set to 0
  train:
    bs: 8 # one gpus if DDP
    common_aug: null 
    class_aug: null
      #S: 0 1 2 4 5 6
      #B-: 0 1 2 4 5 6
    augment: # refer to utils/augment.py
      random_horizonflip:
        p: 0.5
      pad2square: no_params
      resize:
        size: 112
      to_tensor: no_params
      normalize: # default use ImageNet1K mean & var, if not pretrained, del normalize 
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
    aug_epoch: 20 # augment for epochs, on which epoch to weaken, except warm_epoch
  val:
    bs: 32
    pair_txt: /home/duke/project/vision-classifier/crop_face_224/pair_test.txt
    augment:
        pad2square: no_params
        resize:
          size: 112
        #to_tensor: no_params
        #normalize: # default use ImageNet1K mean & var, if not pretrained, del normalize
        #  mean: [0.485, 0.456, 0.406]
        #  std: [0.229, 0.224, 0.225]
hyp:
  epochs: 32
  lr0: 0.008 # sgd=1e-2, adam=1e-3
  lrf_ratio: null # decay to lrf_ratio * lr0, if None, 0.1
  momentum: 0.937
  weight_decay: 0.0005
  warmup_momentum: 0.8
  warm_ep: 0
  loss:
    ce: True
  label_smooth: 0.0
  optimizer: 
    - sgd # sgd, adam or sam
    - False # Different layers in the model set different learning rates, in built/layer_optimizer
  scheduler: linear # linear or cosine
